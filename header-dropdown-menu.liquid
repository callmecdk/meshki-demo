<nav class="header__inline-menu">
  <ul class="list-menu list-menu--inline" role="list">
    {% for link in section.settings.menu.links %}
      {% assign mega_menu = false %}
      {% for block in section.blocks %}
        {% if block.settings.mega_menu_name == link.title %}
          {% assign mega_menu = true %}
          <li class="mega-menu-list">
            <a href="#" class="header__menu-item list-menu__item link link--text focus-inset">{{ link.title }}</a>
            <div class="mega-menu-wrapper">
              <div class="mega-menu-cat">{{ link.title }}</div>
              <div class="mega-menu-container">
                <div class="mega-menu-column">
                  {% for child_link in block.settings.mega_menu_linklist.links -%}
                    <div class="menu-items-column">
                      <ul>
                        {{ child_link.title }}
                        {% for sub_child_link in child_link.links %}
                          <li>
                            <a href="{{ sub_child_link.url }}">{{ sub_child_link.title }}</a>
                          </li>
                        {% endfor %}
                      </ul>
                    </div>
                  {% endfor %}
                </div>

                <div class="menu-images-column">
                  {% for i in (1..3) %}
                    {% assign caption = 'mega_menu_caption_' | append: i %}
                    {% assign image = 'mega_menu_image_' | append: i %}
                    {% assign link = 'mega_menu_link_' | append: i %}
                    {% if block.settings[image] != blank %}
                      <div class="image-item">
                        {% if i == 1 %}
                          <img
                            width=""
                            height=""
                            class="image-item-lg"
                            src="{{ block.settings[image] | image_url: width: 300 }}"
                          >
                        {% else %}
                          <img
                            width=""
                            height=""
                            class="image-item-sm"
                            src="{{ block.settings[image] | image_url: width: 300 }}"
                          >
                        {% endif %}
                        <p>{{ block.settings[caption] }}</p>
                      </div>
                    {% endif %}
                  {% endfor %}
                </div>
              </div>
            </div>
          </li>
        {% endif %}
      {% endfor %}
      {% if mega_menu == false %}
        <li>
          <a href="{{link.url}}" class="header__menu-item list-menu__item link link--text focus-inset ">
            {{ link.title }}
          </a>
        </li>
      {% endif %}
    {% endfor %}
  </ul>
</nav>
<script>
  document.addEventListener('DOMContentLoaded', function() {
  const megaMenuLists = document.querySelectorAll('.mega-menu-list');
  
  megaMenuLists.forEach(item => {
    const imageItems = item.querySelectorAll('.menu-images-column .image-item');
    const megaMenuColumn = item.querySelector('.mega-menu-column');
    const menuImagesColumn = item.querySelector('.menu-images-column');
    let timeout;
  
    if (imageItems.length === 0) {
      megaMenuColumn.classList.add('full-width');
      menuImagesColumn.classList.add('hidden');
    } else if (imageItems.length === 1) {
      megaMenuColumn.classList.add('with-images-1');
    } else if (imageItems.length === 2) {
      megaMenuColumn.classList.add('with-images-2');
    } else if (imageItems.length === 3) {
      megaMenuColumn.classList.add('with-images-3');
    }
  
    item.addEventListener('mouseenter', () => {
      clearTimeout(timeout);
      item.querySelector('.mega-menu-wrapper').classList.add('show');
    });
  
    item.addEventListener('mouseleave', () => {
      timeout = setTimeout(() => {
        item.querySelector('.mega-menu-wrapper').classList.remove('show');
      }, 300);
    });
  
    item.querySelector('.mega-menu-wrapper').addEventListener('mouseenter', () => {
      clearTimeout(timeout);
    });
  
    item.querySelector('.mega-menu-wrapper').addEventListener('mouseleave', () => {
      timeout = setTimeout(() => {
        item.querySelector('.mega-menu-wrapper').classList.remove('show');
      }, 300);
    });
  });
  });
</script>